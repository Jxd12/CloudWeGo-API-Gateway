// Code generated by hertz generator.

package service

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	service "hertzSvr/biz/model/hertzSvr/service"
)

// AddIDL .
// @router /idl/add [POST]
func AddIDL(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.IDLInfo
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.IDLResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteIDL .
// @router /idl/delete [POST]
func DeleteIDL(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.IDLMessage
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.IDLResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateIDL .
// @router /idl/update [POST]
func UpdateIDL(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.IDLInfo
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.IDLResponse)

	c.JSON(consts.StatusOK, resp)
}

// QueryIDL .
// @router /idl/query [GET]
func QueryIDL(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.IDLMessage
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.IDLInfo)

	c.JSON(consts.StatusOK, resp)
}

// RegisterIDL .
// @router /idl/register [POST]
func RegisterIDL(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.RegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.IDLResponse)

	c.JSON(consts.StatusOK, resp)
}
