// Code generated by hertz generator.

package service

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"hertzSvr/biz/handler/hertzSvr/utils"
	service "hertzSvr/biz/model/hertzSvr/service"
)

// RequestA .
// @router /A/req [POST]
func RequestA(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.AReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	//if clientInfo.name != "AService" {
	//	clientInfo.name = "AService"
	//	err = provider.UpdateIDL(idlAContent, map[string]string{})
	//	if err != nil {
	//		panic("Error: update idl failed---" + err.Error())
	//	}
	//	clientInfo.cli = utils.NewClient("AService", provider, resolver)
	//}

	resp := utils.GetHTTPGenericResponse(ctx, c, "RequestA", cliA)

	c.JSON(consts.StatusOK, resp)
}
